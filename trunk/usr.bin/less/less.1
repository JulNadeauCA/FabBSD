.\"	$OpenBSD: less.1,v 1.14 2007/05/31 19:20:12 jmc Exp $
.\"
.\" Copyright (C) 2002  Mark Nudelman
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice in the documentation and/or other materials provided with
.\"    the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
.\" OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
.\" BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\" WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
.\" OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
.\" IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: May 31 2007 $
.Dt LESS 1
.Os
.Sh NAME
.Nm less , more
.Nd view files
.Sh SYNOPSIS
.Nm less No | Nm more
.Fl \&?
.Nm less No | Nm more
.Fl -help
.Nm less No | Nm more
.Fl V
.Nm less No | Nm more
.Fl -version
.Nm less No | Nm more
.Bk -words
.Op Fl Oo Cm + Oc Ns Cm aBCcdEeFfGgIiJLMmNnQqRrSsUuVWwX~
.Op Fl b Ar space
.Op Fl h Ar lines
.Op Fl j Ar line
.Op Fl k Ar keyfile
.Op Fl O | o Ar logfile
.Op Fl P Ar prompt
.Op Fl p Ar pattern
.Op Fl T Ar tagsfile
.Op Fl t Ar tag
.Op Fl x Ar tab,...
.Op Fl y Ar lines
.Op Fl Oo Cm z Oc Ar \ \&lines
.Op Fl # Ar shift
.Xo Oo Cm \+ Ns Oo Ns Cm \+ Ns
.Oc Ar cmd
.Oc
.Xc
.Op Fl -
.Op Ar filename ...
.Ek
.Pp
.\" (See the
.\" .Sx OPTIONS
.\" section for alternate option syntax with long option names.)
.Sh DESCRIPTION
.Nm
is a program similar to the traditional
.Xr more 1 ,
but which allows backward movement in the file as well as forward movement.
Also,
.Nm
does not have to read the entire input file before starting,
so with large input files it starts up faster than text editors like
.Xr vi 1 .
.Nm
uses termcap (or terminfo on some systems),
so it can run on a variety of terminals.
There is even limited support for hardcopy terminals.
(On a hardcopy terminal, lines which should be printed at the top
of the screen are prefixed with a caret.)
.Pp
This version of
.Nm
also acts as
.Xr more 1
if it is called as
.Nm more .
In this mode, the differences are in the prompt and that
.Nm more
exits by default when it gets to the end of the file.
Commands are based on both traditional
.Nm more
and
.Xr vi 1 .
Commands may be preceded by a decimal number,
called N in the descriptions below.
The number is used by some commands, as indicated.
.Sh COMMANDS
In the following descriptions, ^X means control-X.
ESC stands for the ESCAPE key; for example ESC-v means the
two character sequence "ESCAPE", then "v".
.Bl -tag -width XXXX
.It Ic h | H
Help: display a summary of these commands.
If you forget all the other commands, remember this one.
.It Ic SPACE | ^V | f | ^F
Scroll forward N lines, default one window (see option -z below).
If N is more than the screen size, only the final screenful is displayed.
Warning: some systems use ^V as a special literalization character.
.It Ic z
Like SPACE, but if N is specified, it becomes the new window size.
.It Ic ESC-SPACE
Like SPACE, but scrolls a full screensful, even if it reaches
end-of-file in the process.
.It Xo
.Ic RETURN No \&| Ic ^N No \&|
.Ic e No \&| Ic ^E No \&|
.Ic j No \&| Ic ^J
.Xc
Scroll forward N lines, default 1.
The entire N lines are displayed, even if N is more than the screen size.
.It Ic d | ^D
Scroll forward N lines, default one half of the screen size.
If N is specified, it becomes the new default for subsequent d and u commands.
.It Ic b | ^B | ESC-v
Scroll backward N lines, default one window (see option -z below).
If N is more than the screen size, only the final screenful is displayed.
.It Ic w
Like ESC-v, but if N is specified, it becomes the new window size.
.It Xo
.Ic y No \&| Ic ^Y No \&|
.Ic ^P No \&| Ic k No \&|
.Ic ^K
.Xc
Scroll backward N lines, default 1.
The entire N lines are displayed, even if N is more than the screen size.
Warning: some systems use ^Y as a special job control character.
.It Ic u | ^U
Scroll backward N lines, default one half of the screen size.
If N is specified, it becomes the new default for subsequent d and u commands.
.It Ic ESC-) | RIGHTARROW
Scroll horizontally right N characters, default half the screen width
(see the -# option).
If a number N is specified, it becomes the default for future
RIGHTARROW and LEFTARROW commands.
While the text is scrolled, it acts as though the -S option (chop lines)
were in effect.
.It Ic ESC-( | LEFTARROW
Scroll horizontally left N
characters, default half the screen width (see the -# option).
If a number N is specified, it becomes the default for future
RIGHTARROW and LEFTARROW commands.
.It Ic r | ^R | ^L
Repaint the screen.
.It Ic R
Repaint the screen, discarding any buffered input.
Useful if the file is changing while it is being viewed.
.It Ic F
Scroll forward, and keep trying to read when the end of file is reached.
Normally this command would be used when already at the end of the file.
It is a way to monitor the tail of a file which is growing
while it is being viewed.
(The behavior is similar to the "tail -f" command.)
.It Ic g | < | ESC-<
Go to line N in the file, default 1 (beginning of file).
(Warning: this may be slow if N is large.)
.It Ic G | > | ESC->
Go to line N in the file, default the end of the file.
(Warning: this may be slow if N is large,
or if N is not specified and standard input, rather than a file,
is being read.)
.It Ic p | %
Go to a position N percent into the file.
N should be between 0 and 100.
.It Ic {
If a left curly bracket appears in the top line displayed
on the screen, the { command will go to the matching right curly bracket.
The matching right curly bracket is positioned on the bottom
line of the screen.
If there is more than one left curly bracket on the top line, a number N
may be used to specify the N-th bracket on the line.
.It Ic }
If a right curly bracket appears in the bottom line displayed on the screen,
the } command will go to the matching left curly bracket.
The matching left curly bracket is positioned on the top
line of the screen.
If there is more than one right curly bracket on the top line,
a number N may be used to specify the N-th bracket on the line.
.It Ic \&(
Like {, but applies to parentheses rather than curly brackets.
.It Ic \&)
Like }, but applies to parentheses rather than curly brackets.
.It Ic \&[
Like {, but applies to square brackets rather than curly brackets.
.It Ic \&]
Like }, but applies to square brackets rather than curly brackets.
.It Ic ESC-^F
Followed by two characters, acts like {,
but uses the two characters as open and close brackets, respectively.
For example, "ESC ^F < >" could be used to
go forward to the > which matches the < in the top displayed line.
.It Ic ESC-^B
Followed by two characters, acts like },
but uses the two characters as open and close brackets, respectively.
For example, "ESC ^B < >" could be used to
go backward to the < which matches the > in the bottom displayed line.
.It Ic m
Followed by any lowercase letter, marks the current position with that letter.
.It Ic '
(Single quote.)
Followed by any lowercase letter, returns to the position which
was previously marked with that letter.
Followed by another single quote, returns to the position at
which the last "large" movement command was executed.
Followed by a ^ or $, jumps to the beginning or end of the file respectively.
Marks are preserved when a new file is examined,
so the ' command can be used to switch between input files.
.It Ic ^X^X
Same as single quote.
.It Ic /pattern
Search forward in the file for the N-th line containing the pattern.
N defaults to 1.
The pattern is a regular expression, as recognized by
.Xr ed 1 .
The search starts at the second line displayed
(but see the -a and -j options, which change this).
.Pp
Certain characters are special if entered at the beginning of the pattern;
they modify the type of search rather than become part of the pattern:
.Bl -tag -width Ds
.It Ic ^N | \&!
Search for lines which do NOT match the pattern.
.It Ic ^E | *
Search multiple files.
That is, if the search reaches the END of the current file
without finding a match,
the search continues in the next file in the command line list.
.It Ic ^F | @
Begin the search at the first line of the FIRST file
in the command line list,
regardless of what is currently displayed on the screen
or the settings of the -a or -j options.
.It Ic ^K
Highlight any text which matches the pattern on the current screen,
but don't move to the first match (KEEP current position).
.It Ic ^R
Don't interpret regular expression metacharacters;
that is, do a simple textual comparison.
.El
.It Ic ?pattern
Search backward in the file for the N-th line containing the pattern.
The search starts at the line immediately before the top line displayed.
.Pp
Certain characters are special, as in the / command:
.Bl -tag -width Ds
.It Ic ^N | \&!
Search for lines which do NOT match the pattern.
.It Ic ^E | *
Search multiple files.
That is, if the search reaches the beginning of the current file
without finding a match,
the search continues in the previous file in the command line list.
.It Ic ^F | @
Begin the search at the last line of the last file
in the command line list,
regardless of what is currently displayed on the screen
or the settings of the -a or -j options.
.It Ic ^K
As in forward searches.
.It Ic ^R
As in forward searches.
.El
.It Ic ESC-/pattern
Same as "/*".
.It Ic ESC-?pattern
Same as "?*".
.It Ic n
Repeat previous search, for N-th line containing the last pattern.
If the previous search was modified by ^N, the search is made for the
N-th line NOT containing the pattern.
If the previous search was modified by ^E, the search continues
in the next (or previous) file if not satisfied in the current file.
If the previous search was modified by ^R, the search is done
without using regular expressions.
There is no effect if the previous search was modified by ^F or ^K.
.It Ic N
Repeat previous search, but in the reverse direction.
.It Ic ESC-n
Repeat previous search, but crossing file boundaries.
The effect is as if the previous search were modified by *.
.It Ic ESC-N
Repeat previous search, but in the reverse direction
and crossing file boundaries.
.It Ic ESC-u
Undo search highlighting.
Turn off highlighting of strings matching the current search pattern.
If highlighting is already off because of a previous ESC-u command,
turn highlighting back on.
Any search command will also turn highlighting back on.
(Highlighting can also be disabled by toggling the -G option;
in that case search commands do not turn highlighting back on.)
.It Ic :e Op Ar filename
Examine a new file.
If the filename is missing, the "current" file (see the :n and :p commands
below) from the list of files in the command line is re-examined.
A percent sign (%) in the filename is replaced by the name of the
current file.
A pound sign (#) is replaced by the name of the previously examined file.
However, two consecutive percent signs are simply
replaced with a single percent sign.
This allows you to enter a filename that contains a percent sign
in the name.
Similarly, two consecutive pound signs are replaced with a single pound sign.
The filename is inserted into the command line list of files
so that it can be seen by subsequent :n and :p commands.
If the filename consists of several files, they are all inserted into
the list of files and the first one is examined.
If the filename contains one or more spaces,
the entire filename should be enclosed in double quotes
(also see the -" option).
.It Ic ^X^V | E
Same as :e.
Warning: some systems use ^V as a special literalization character.
On such systems, you may not be able to use ^V.
.It Ic :n
Examine the next file (from the list of files given in the command line).
If a number N is specified, the N-th next file is examined.
.It Ic :p
Examine the previous file in the command line list.
If a number N is specified, the N-th previous file is examined.
.It Ic :t
Go to the specified tag.
.It Ic :x
Examine the first file in the command line list.
If a number N is specified, the N-th file in the list is examined.
.It Ic :d
Remove the current file from the list of files.
.It Ic t
Go to the next tag, if there were more than one matches for the current tag.
See the \-t option for more details about tags.
.It Ic T
Go to the previous tag, if there were more than one matches for the current tag.
.It Ic = | ^G | :f
Prints some information about the file being viewed, including its name
and the line number and byte offset of the bottom line being displayed.
If possible, it also prints the length of the file,
the number of lines in the file
and the percent of the file above the last displayed line.
.It Ic \-
Followed by one of the command line option letters (see
.Sx OPTIONS
below),
this will change the setting of that option
and print a message describing the new setting.
If a ^P (CONTROL-P) is entered immediately after the dash,
the setting of the option is changed but no message is printed.
If the option letter has a numeric value (such as -b or -h),
or a string value (such as -P or -t),
a new value may be entered after the option letter.
If no new value is entered, a message describing
the current setting is printed and nothing is changed.
.It Ic \-\-
Like the \- command, but takes a long option name (see
.Sx OPTIONS
below)
rather than a single option letter.
You must press RETURN after typing the option name.
A ^P immediately after the second dash suppresses printing of a
message describing the new setting, as in the \- command.
.It Ic \-+
Followed by one of the command line option letters this will reset the
option to its default setting and print a message describing the new setting.
(The "\-+X" command does the same thing as "\-+X" on the command line.)
This does not work for string-valued options.
.It Ic \-\-+
Like the \-+ command, but takes a long option name
rather than a single option letter.
.It Ic \-!
Followed by one of the command line option letters, this will reset the
option to the "opposite" of its default setting and print a message
describing the new setting.
This does not work for numeric or string-valued options.
.It Ic \-\-!
Like the \-! command, but takes a long option name
rather than a single option letter.
.It Ic _
(Underscore.)
Followed by one of the command line option letters,
this will print a message describing the current setting of that option.
The setting of the option is not changed.
.It Ic __
(Double underscore.)
Like the _ (underscore) command, but takes a long option name
rather than a single option letter.
You must press RETURN after typing the option name.
.It Ic +cmd
Causes the specified cmd to be executed each time a new file is examined.
For example, +G causes
.Nm
to initially display each file starting at the end rather than the beginning.
.It Ic V
Prints the version number of
.Nm
being run.
.It Xo
.Ic q No \&| Ic Q No \&|
.Ic :q No \&| Ic :Q No \&|
.Ic ZZ
.Xc
Exits
.Nm less .
.El
.Pp
The following
four
commands may or may not be valid, depending on your particular installation.
.Bl -tag -width XXXX
.It Ic v
Invokes an editor to edit the current file being viewed.
The editor is taken from the environment variable
.Ev VISUAL ,
if defined,
or
.Ev EDITOR
if
.Ev VISUAL
is not defined,
or defaults to "vi" if neither
.Ev VISUAL
nor
.Ev EDITOR
is defined.
See also the discussion of LESSEDIT under the section on
.Sx PROMPTS
below.
.It Ic \&! Ar shell-command
Invokes a shell to run the shell-command given.
A percent sign (%) in the command is replaced by the name of the current file.
A pound sign (#) is replaced by the name of the previously examined file.
"!!" repeats the last shell command.
"!" with no shell command simply invokes a shell.
The shell is taken from the environment variable
.Ev SHELL ,
or defaults to "sh".
.\" On MS-DOS and OS/2 systems, the shell is the normal command processor.
.It Ic \&| <m> Ar shell-command
<m> represents any mark letter.
Pipes a section of the input file to the given shell command.
The section of the file to be piped is between the first line on
the current screen and the position marked by the letter.
<m> may also be ^ or $ to indicate beginning or end of file respectively.
If <m> is . or newline, the current screen is piped.
.It Ic s Ar filename
Save the input to a file.
This only works if the input is a pipe, not an ordinary file.
.El
.Sh OPTIONS
Command line options are described below.
Most options may be changed while
.Nm
is running, via the "\-" command.
.Pp
Most options may be given in one of two forms:
either a dash followed by a single letter, or two dashes followed by a
long option name.
A long option name may be abbreviated as long as the abbreviation is
unambiguous.
For example, --quit-at-eof may be abbreviated --quit, but not
--qui, since both --quit-at-eof and --quiet begin with --qui.
Some long option names are in uppercase, such as --QUIT-AT-EOF, as
distinct from --quit-at-eof.
Such option names need only have their first letter capitalized;
the remainder of the name may be in either case.
For example, --Quit-at-eof is equivalent to --QUIT-AT-EOF.
.Pp
Options are also taken from the environment variable
.Ev LESS
if the command is
.Nm less ,
or from the environment variable
.Ev MORE
if the command is
.Nm more .
For example, to avoid typing "less -options ..." each time
.Nm
is invoked, you might tell
.Xr csh 1 :
.Pp
.Dl setenv LESS "-options"
.Pp
or if you use
.Xr sh 1 :
.Pp
.Dl LESS="-options"; export LESS
.Pp
.\" On MS-DOS, you don't need the quotes, but you should replace any
.\" percent signs in the options string by double percent signs.
.\" .Pp
The environment variable is parsed before the command line,
so command line options override the
.Ev LESS
environment variable.
If an option appears in the
.Ev LESS
variable, it can be reset to its default value on the command line by
beginning the command line option with "\-+".
.Pp
For options like -P which take a following string,
a dollar sign ($) must be used to signal the end of the string.
For example, to separate a prompt value from any other options
with dollar sign between them:
.Pp
.Dl LESS="-Ps--More--$-C -e"
.Bl -tag -width XXXX
.It Fl \&? | -help
This option displays a summary of the commands accepted by
.Nm
(the same as the h command).
(Depending on how your shell interprets the question mark,
it may be necessary to quote the question mark, thus: "-\e?".)
.It Fl a | -search-skip-screen
Causes searches to start after the last line displayed on the screen,
thus skipping all lines displayed on the screen.
By default, searches start at the second line on the screen
(or after the last found line; see the -j option).
.It Fl B | -auto-buffers
By default, when data is read from a pipe,
buffers are allocated automatically as needed.
If a large amount of data is read from the pipe, this can cause
a large amount of memory to be allocated.
The -B option disables this automatic allocation of buffers for pipes,
so that only 64K (or the amount of space specified by the -b option)
is used for the pipe.
Warning: use of -B can result in erroneous display, since only the
most recently viewed part of the file is kept in memory;
any earlier data is lost.
.It Xo
.Fl b Ns Ar n |
.Fl -buffers Ns = Ns Ar n
.Xc
Specifies the amount of buffer space
.Nm
will use for each file, in units of kilobytes (1024 bytes).
By default 64K of buffer space is used for each file
(unless the file is a pipe; see the -B option).
The -b option specifies instead that n kilobytes of
buffer space should be used for each file.
If n is -1, buffer space is unlimited; that is,
the entire file is read into memory.
.It Fl C | -CLEAR-SCREEN
The -C option is like -c, but the screen is cleared before it is repainted.
.It Fl c | -clear-screen
Causes full screen repaints to be painted from the top line down.
By default,
full screen repaints are done by scrolling from the bottom of the screen.
.It Fl d | -dumb No (less only)
The -d option suppresses the error message
normally displayed if the terminal is dumb;
that is, lacks some important capability,
such as the ability to clear the screen or scroll backward.
The -d option does not otherwise change the behavior of
.Nm
on a dumb terminal.
This option is on by default when invoked as
.Nm more .
.It Fl d No (more only)
The -d option causes the default prompt to include the
basic directions ``[Press space to continue, 'q' to quit.]''.
The -d option also causes the message ``[Press 'h' for instructions.]'' to be
displayed when an invalid command is entered (normally, the bell is rung).
This option is useful in environments where users may not be experienced
with pagers.
.\" .It Fl Dxcolor or --color=xcolor"
.\" [MS-DOS only]
.\" Sets the color of the text displayed.
.\" x is a single character which selects the type of text whose color is
.\" being set: n=normal, s=standout, d=bold, u=underlined, k=blink.
.\" color is a pair of numbers separated by a period.
.\" The first number selects the foreground color and the second selects
.\" the background color of the text.
.\" A single number N is the same as N.0.
.It Fl E | -QUIT-AT-EOF
Causes
.Nm
to automatically exit the first time it reaches end-of-file.
.It Fl e | -quit-at-eof
Causes
.Nm
to automatically exit the second time it reaches end-of-file.
By default, the only way to exit
.Nm
is via the "q" command.
.It Fl F | -quit-if-one-screen
Causes
.Nm
to automatically exit if the entire file can be displayed on the first screen.
.It Fl f | -force
Forces non-regular files to be opened.
(A non-regular file is a directory or a device special file.)
Also suppresses the warning message when a binary file is opened.
By default,
.Nm
will refuse to open non-regular files.
.It Fl G | -HILITE-SEARCH
The -G option suppresses all highlighting of strings found by search commands.
.It Fl g | -hilite-search
Normally,
.Nm
will highlight ALL strings which match the last search command.
The -g option changes this behavior to highlight only the particular string
which was found by the last search command.
This can cause
.Nm
to run somewhat faster than the default.
.It Xo
.Fl h Ns Ar n |
.Fl -max-back-scroll Ns = Ns Ar n
.Xc
Specifies a maximum number of lines to scroll backward.
If it is necessary to scroll backward more than n lines,
the screen is repainted in a forward direction instead.
(If the terminal does not have the ability to scroll backward, -h0 is implied.)
.It Fl I | -IGNORE-CASE
Like -i, but searches ignore case even if the pattern contains uppercase
letters.
.It Fl i | -ignore-case
Causes searches to ignore case; that is,
uppercase and lowercase are considered identical.
This option is ignored if any uppercase letters appear in the search pattern;
in other words,
if a pattern contains uppercase letters, then that search does not ignore case.
.It Fl J | -status-column
Displays a status column at the left edge of the screen.
The status column shows the lines that matched the current search.
The status column is also used if the -w or -W option is in effect.
.It Xo
.Fl j Ns Ar n |
.Fl -jump-target Ns = Ns Ar n
.Xc
Specifies a line on the screen where the "target" line is to be positioned.
A target line is the object of a text search,
tag search, jump to a line number,
jump to a file percentage, or jump to a marked position.
The screen line is specified by a number: the top line on the screen
is 1, the next is 2, and so on.
The number may be negative to specify a line relative to the bottom
of the screen: the bottom line on the screen is -1, the second
to the bottom is -2, and so on.
If the -j option is used, searches begin at the line immediately
after the target line.
For example, if "-j4" is used, the target line is the
fourth line on the screen, so searches begin at the fifth line on the screen.
.It Xo
.Fl k Ns Ar filename |
.Fl -lesskey-file Ns = Ns Ar filename
.Xc
Causes
.Nm
to open and interpret the named file as a
.Xr lesskey 1
file.
Multiple -k options may be specified.
If the
.Ev LESSKEY
or
.Ev LESSKEY_SYSTEM
environment variable is set, or if a lesskey file is found in a standard place
(see
.Sx KEY BINDINGS ) ,
it is also used as a lesskey file.
.It Fl L | -no-lessopen
Ignore the
.Ev LESSOPEN
environment variable (see the
.Sx INPUT PREPROCESSOR
section below).
This option can be set from within
.Nm less ,
but it will apply only to files opened subsequently, not to the
file which is currently open.
When invoked as
.Nm more ,
the
.Ev LESSOPEN
environment variable is ignored by default.
.It Fl M | -LONG-PROMPT
Causes
.Nm
to prompt even more verbosely than
.Nm more .
.It Fl m | -long-prompt
Causes
.Nm
to prompt verbosely (like more), with the percent into the file.
By default,
.Nm
prompts with a colon.
.It Fl N | -LINE-NUMBERS
Causes a line number to be displayed at the beginning of each line in the
display.
.It Fl n | -line-numbers
Suppresses line numbers.
The default (to use line numbers) may cause
.Nm
to run more slowly in some cases, especially with a very large input file.
Suppressing line numbers with the -n option will avoid this problem.
Using line numbers means: the line number will be displayed in the verbose
prompt and in the = command, and the v command will pass the current line
number to the editor (see also the discussion of LESSEDIT in
.Sx PROMPTS
below).
.It Xo
.Fl O Ns Ar filename |
.Fl -LOG-FILE Ns = Ns Ar filename
.Xc
The -O option is like -o, but it will overwrite an existing
file without asking for confirmation.
.Pp
If no log file has been specified,
the -o and -O options can be used from within
.Nm
to specify a log file.
Without a file name, they will simply report the name of the log file.
The "s" command is equivalent to specifying -o from within
.Nm less .
.It Xo
.Fl o Ns Ar filename |
.Fl -log-file Ns = Ns Ar filename
.Xc
Causes
.Nm
to copy its input to the named file as it is being viewed.
This applies only when the input file is a pipe, not an ordinary file.
If the file already exists,
.Nm
will ask for confirmation before overwriting it.
.It Xo
.Fl P Ns Ar prompt |
.Fl -prompt Ns = Ns Ar prompt
.Xc
Provides a way to tailor the three prompt styles to your own preference.
This option would normally be put in the
.Ev LESS
environment variable, rather than being typed in with each
.Nm
command.
Such an option must either be the last option in the
.Ev LESS
variable, or be terminated by a dollar sign.
-Ps followed by a string changes the default (short) prompt to that string.
-Pm changes the medium (-m) prompt.
-PM changes the long (-M) prompt.
-Ph changes the prompt for the help screen.
-P= changes the message printed by the = command.
-Pw changes the message printed while waiting for data (in the F command).
All prompt strings consist of a sequence of letters and special escape
sequences.
See the section on
.Sx PROMPTS
for more details.
.It Xo
.Fl p Ns Ar pattern |
.Fl -pattern Ns = Ns Ar pattern
.Xc
The -p option on the command line is equivalent to specifying +/pattern;
that is, it tells
.Nm
to start at the first occurrence of pattern in the file.
.It Fl Q | -QUIET | -SILENT
Causes totally "quiet" operation: the terminal bell is never rung.
.It Fl q | -quiet | -silent
Causes moderately "quiet" operation:
the terminal bell is not rung if an attempt is made to scroll past the end
of the file or before the beginning of the file.
If the terminal has a "visual bell", it is used instead.
The bell will be rung on certain other errors,
such as typing an invalid character.
The default is to ring the terminal bell in all such cases.
.It Fl R | -RAW-CONTROL-CHARS
Like -r, but tries to keep track of the screen appearance where possible.
This works only if the input consists of normal text and possibly some
ANSI "color" escape sequences, which are sequences of the form:
.Pp
	ESC [ ... m
.Pp
where the "..." is zero or more characters other than "m".
For the purpose of keeping track of screen appearance,
all control characters and all ANSI color escape sequences are
assumed to not move the cursor.
You can make
.Nm
think that characters other than "m" can end ANSI color escape sequences
by setting the environment variable
.Ev LESSANSIENDCHARS
to the list of characters which can end a color escape sequence.
.It Fl r | -raw-control-chars
Causes "raw" control characters to be displayed.
The default is to display control characters using the caret notation;
for example, a control-A (octal 001) is displayed as "^A".
Warning: when the -r option is used,
.Nm
cannot keep track of the actual appearance of the screen
(since this depends on how the screen responds to
each type of control character).
Thus, various display problems may result,
such as long lines being split in the wrong place.
.It Fl S | -chop-long-lines
Causes lines longer than the screen width to be chopped rather than folded.
That is, the portion of a long line that does not fit in
the screen width is not shown.
The default is to fold long lines; that is, display the remainder
on the next line.
.It Fl s | -squeeze-blank-lines
Causes consecutive blank lines to be squeezed into a single blank line.
This is useful when viewing
.Xr nroff 1
output.
.It Xo
.Fl T Ns Ar tagsfile |
.Fl -tag-file Ns = Ns Ar tagsfile
.Xc
Specifies a tags file to be used instead of "tags".
.It Xo
.Fl t Ns Ar tag |
.Fl -tag Ns = Ns Ar tag
.Xc
The -t option, followed immediately by a TAG,
will edit the file containing that tag.
For this to work, tag information must be available;
for example, there may be a file in the current directory called "tags",
which was previously built by
.Xr ctags 1
or an equivalent command.
If the environment variable
.Ev LESSGLOBALTAGS
is set, it is taken to be the name of a command compatible with
.Xr global ,
and that command is executed to find the tag.
(See http://www.gnu.org/software/global/global.html).
The -t option may also be specified from within
.Nm
(using the \- command) as a way of examining a new file.
The command ":t" is equivalent to specifying -t from within
.Nm less .
.It Fl U | -UNDERLINE-SPECIAL
Causes backspaces, tabs and carriage returns to be
treated as control characters;
that is, they are handled as specified by the -r option.
.Pp
By default, if neither -u nor -U is given, backspaces which appear adjacent
to an underscore character are treated specially:
the underlined text is displayed
using the terminal's hardware underlining capability.
Also, backspaces which appear between two identical characters
are treated specially:
the overstruck text is printed
using the terminal's hardware boldface capability.
Other backspaces are deleted, along with the preceding character.
Carriage returns immediately followed by a newline are deleted.
Other carriage returns are handled as specified by the -r option.
Text which is overstruck or underlined can be searched for
if neither -u nor -U is in effect.
.It Fl u | -underline-special
Causes backspaces and carriage returns to be treated as printable characters;
that is, they are sent to the terminal when they appear in the input.
.It Fl V | -version
Displays the version number of
.Nm less .
.It Fl W | -HILITE-UNREAD
Like -w, but temporarily highlights the first new line after any
forward movement command larger than one line.
.It Fl w | -hilite-unread
Temporarily highlights the first "new" line after a forward movement
of a full page.
The first "new" line is the line immediately following the line previously
at the bottom of the screen.
Also highlights the target line after a g or p command.
The highlight is removed at the next command which causes movement.
The entire line is highlighted, unless the -J option is in effect,
in which case only the status column is highlighted.
.It Fl X | -no-init
Disables sending the termcap initialization and deinitialization strings
to the terminal.
This is sometimes desirable if the deinitialization string does
something unnecessary, like clearing the screen.
.It Xo
.Fl x Ns Ar n,... |
.Fl -tabs Ns = Ns Ar n,...
.Xc
Sets tab stops.
If only one n is specified, tab stops are set at multiples of n.
If multiple values separated by commas are specified, tab stops are set at
those positions, and then continue with the same spacing as the last two.
For example, -x9,17 will set tabs at positions 9, 17, 25, 33, etc.
The default for n is 8.
.It Xo
.Fl y Ns Ar n |
.Fl -max-forw-scroll Ns = Ns Ar n
.Xc
Specifies a maximum number of lines to scroll forward.
If it is necessary to scroll forward more than n lines,
the screen is repainted instead.
The -c or -C option may be used to repaint from the top of
the screen if desired.
By default, any forward movement causes scrolling.
.It Xo
.Fl Oo Cm z Oc Ns Ar n |
.Fl -window Ns = Ns Ar n
.Xc
Changes the default scrolling window size to n lines.
The default is one screenful.
The z and w commands can also be used to change the window size.
The "z" may be omitted for compatibility with
.Nm more .
If the number
.Ar n
is negative, it indicates
.Ar n
lines less than the current screen size.
For example, if the screen is 24 lines, -z-4 sets the
scrolling window to 20 lines.
If the screen is resized to 40 lines,
the scrolling window automatically changes to 36 lines.
.It Fl -no-keypad
Disables sending the keypad initialization and deinitialization strings
to the terminal.
This is sometimes useful if the keypad strings make the numeric
keypad behave in an undesirable manner.
.It Xo
.Ar -cc |
.Fl -quotes Ns = Ns Ar cc
.Xc
Changes the filename quoting character.
This may be necessary if you are trying to name a file
which contains both spaces and quote characters.
Followed by a single character, this changes the quote character to that
character.
Filenames containing a space should then be surrounded by that character
rather than by double quotes.
Followed by two characters, changes the open quote to the first character,
and the close quote to the second character.
Filenames containing a space should then be preceded by the open quote
character and followed by the close quote character.
Note that even after the quote characters are changed, this option
remains -" (a dash followed by a double quote).
.It Fl ~ | -tilde
Normally lines after end of file are displayed as a single tilde (~).
This option causes lines after end of file to be displayed as blank lines.
.It Fl # | -shift
Specifies the default number of positions to scroll horizontally
in the RIGHTARROW and LEFTARROW commands.
If the number specified is zero, it sets the default number of
positions to one half of the screen width.
.It Fl -
A command line argument of "--" marks the end of option arguments.
Any arguments following this are interpreted as filenames.
This can be useful when viewing a file whose name begins with a "-" or "+".
.It Cm +
If a command line option begins with +,
the remainder of that option is taken to be an initial command to
.Nm less .
For example, +G tells
.Nm
to start at the end of the file rather than the beginning,
and +/xyz tells it to start at the first occurrence of "xyz" in the file.
As a special case, +<number> acts like +<number>g;
that is, it starts the display at the specified line number
(however, see the caveat under the "g" command above).
If the option starts with ++, the initial command applies to
every file being viewed, not just the first one.
The + command described previously
may also be used to set (or change) an initial command for every file.
.El
.Sh LINE EDITING
When entering command line at the bottom of the screen
(for example, a filename for the :e command,
or the pattern for a search command),
certain keys can be used to manipulate the command line.
Most commands have an alternate form in [ brackets ] which can be used if
a key does not exist on a particular keyboard.
.\" (The bracketed forms do not work in the MS-DOS version.)
Any of these special keys may be entered literally by preceding
it with the "literal" character, either ^V or ^A.
A backslash itself may also be entered literally by entering two backslashes.
.Bl -tag -width Ds
.It LEFTARROW [ ESC-h ]
Move the cursor one space to the left.
.It RIGHTARROW [ ESC-l ]
Move the cursor one space to the right.
.It ^LEFTARROW [ ESC-b or ESC-LEFTARROW ]
(That is, CONTROL and LEFTARROW simultaneously.)
Move the cursor one word to the left.
.It ^RIGHTARROW [ ESC-w or ESC-RIGHTARROW ]
(That is, CONTROL and RIGHTARROW simultaneously.)
Move the cursor one word to the right.
.It HOME [ ESC-0 ]
Move the cursor to the beginning of the line.
.It END [ ESC-$ ]
Move the cursor to the end of the line.
.It BACKSPACE
Delete the character to the left of the cursor,
or cancel the command if the command line is empty.
.It DELETE or [ ESC-x ]
Delete the character under the cursor.
.It ^BACKSPACE [ ESC-BACKSPACE ]
(That is, CONTROL and BACKSPACE simultaneously.)
Delete the word to the left of the cursor.
.It ^DELETE [ ESC-X or ESC-DELETE ]
(That is, CONTROL and DELETE simultaneously.)
Delete the word under the cursor.
.It UPARROW [ ESC-k ]
Retrieve the previous command line.
.It DOWNARROW [ ESC-j ]
Retrieve the next command line.
.It TAB
Complete the partial filename to the left of the cursor.
If it matches more than one filename, the first match
is entered into the command line.
Repeated TABs will cycle through the other matching filenames.
If the completed filename is a directory, a "/" is appended to the filename.
.\" (On MS-DOS systems, a "\e" is appended.)
The environment variable
.Ev LESSSEPARATOR
can be used to specify a different character to append to a directory name.
.It BACKTAB [ ESC-TAB ]
Like TAB, but cycles in the reverse direction through the matching filenames.
.It ^L
Complete the partial filename to the left of the cursor.
If it matches more than one filename, all matches are entered into
the command line (if they fit).
.\" .It ^U (Unix and OS/2) or ESC (MS-DOS)
.It ^U
Delete the entire command line,
or cancel the command if the command line is empty.
If you have changed your line-kill character to something
other than ^U, that character is used instead of ^U.
.El
.Sh KEY BINDINGS
You may define your own
.Nm
commands by using the program
.Xr lesskey 1
to create a lesskey file.
This file specifies a set of command keys and an action
associated with each key.
You may also use lesskey
to change the line-editing keys (see
.Sx LINE EDITING ) ,
and to set environment variables.
If the environment variable
.Ev LESSKEY
is set,
.Nm
uses that as the name of the lesskey file.
Otherwise,
.Nm
looks for a lesskey file called "$HOME/.less".
.\" On MS-DOS and Windows systems,
.\" .I less
.\" looks for a lesskey file called "$HOME/_less", and if it is not found there,
.\" then looks for a lesskey file called "_less" in any directory specified
.\" in the PATH environment variable.
.\" On OS/2 systems,
.\" .I less
.\" looks for a lesskey file called "$HOME/less.ini", and if it is not found,
.\" then looks for a lesskey file called "less.ini" in any directory specified
.\" in the INIT environment variable, and if it not found there,
.\" then looks for a lesskey file called "less.ini" in any directory specified
.\" in the PATH environment variable.
See the
.Xr lesskey 1
manual page for more details.
.Pp
A system-wide lesskey file may also be set up to provide key bindings.
If a key is defined in both a local lesskey file and in the
system-wide file, key bindings in the local file take precedence over
those in the system-wide file.
If the environment variable
.Ev LESSKEY_SYSTEM
is set,
.Nm
uses that as the name of the system-wide lesskey file.
Otherwise,
.Nm
looks in a standard place for the system-wide lesskey file:
On
.Ox ,
the system-wide lesskey file is
.Pa /etc/sysless .
.\" On Unix systems, the system-wide lesskey file is /usr/local/etc/sysless.
.\" (However, if
.\" .Nm less
.\" was built with a different sysconf directory than /usr/local/etc,
.\" that directory is where the sysless file is found.)
.\" On MS-DOS and Windows systems, the system-wide lesskey file is c:\e_sysless.
.\" On OS/2 systems, the system-wide lesskey file is c:\esysless.ini.
.Sh INPUT PREPROCESSOR
You may define an "input preprocessor" for
.Nm less .
Before
.Nm less
opens a file, it first gives your input preprocessor a chance to modify the
way the contents of the file are displayed.
An input preprocessor is simply an executable program (or shell script),
which writes the contents of the file to a different file,
called the replacement file.
The contents of the replacement file are then displayed
in place of the contents of the original file.
However, it will appear to the user as if the original file is opened;
that is,
.Nm less
will display the original filename as the name of the current file.
.Pp
An input preprocessor receives one command line argument, the original filename,
as entered by the user.
It should create the replacement file, and when finished
print the name of the replacement file to its standard output.
If the input preprocessor does not output a replacement filename,
.Nm
uses the original file, as normal.
The input preprocessor is not called when viewing standard input.
To set up an input preprocessor, set the
.Ev LESSOPEN
environment variable to a command line which will invoke your
input preprocessor.
This command line should include one occurrence of the string "%s",
which will be replaced by the filename
when the input preprocessor command is invoked.
.Pp
When
.Nm
closes a file opened in such a way, it will call another program,
called the input postprocessor,
which may perform any desired clean-up action (such as deleting the
replacement file created by
.Ev LESSOPEN ) .
This program receives two command line arguments, the original filename
as entered by the user, and the name of the replacement file.
To set up an input postprocessor, set the
.Ev LESSCLOSE
environment variable to a command line which will invoke your
input postprocessor.
It may include two occurrences of the string "%s";
the first is replaced with the original name of the file and the second
with the name of the replacement file, which was output by
.Ev LESSOPEN .
.Pp
For example, these two scripts will allow you
to keep files in compressed format, but still let
.Nm
view them directly:
.Pp
lessopen.sh:
.Bd -literal -offset indent
#! /bin/sh
case "$1" in
*.Z)	uncompress -c $1  >/tmp/less.$$  2>/dev/null
	if [ -s /tmp/less.$$ ]; then
		echo /tmp/less.$$
	else
		rm -f /tmp/less.$$
	fi
	;;
esac
.Ed
.Pp
lessclose.sh:
.Bd -literal -offset indent
#! /bin/sh
rm $2
.Ed
.Pp
To use these scripts, put them both where they can be executed and
set LESSOPEN="lessopen.sh\ %s", and LESSCLOSE="lessclose.sh\ %s\ %s".
More complex LESSOPEN and LESSCLOSE scripts may be written
to accept other types of compressed files, and so on.
.Pp
It is also possible to set up an input preprocessor to
pipe the file data directly to
.Nm less ,
rather than putting the data into a replacement file.
This avoids the need to decompress the entire file before starting to view it.
An input preprocessor that works this way is called an input pipe.
An input pipe, instead of writing the name of a replacement file on
its standard output,
writes the entire contents of the replacement file on its standard output.
If the input pipe does not write any characters on its standard output,
then there is no replacement file and
.Nm
uses the original file, as normal.
To use an input pipe, make the first character in the
.Ev LESSOPEN
environment variable a vertical bar (|) to signify that the
input preprocessor is an input pipe.
.Pp
For example, this script will work like the previous example scripts:
.Pp
lesspipe.sh:
.Bd -literal -offset indent
#! /bin/sh
case "$1" in
*.Z)	uncompress -c $1  2>/dev/null
	;;
esac
.Ed
.Pp
To use this script, put it where it can be executed and set
LESSOPEN="|lesspipe.sh %s".
When an input pipe is used, a LESSCLOSE postprocessor can be used,
but it is usually not necessary since there is no replacement file to clean up.
In this case, the replacement file name passed to the LESSCLOSE
postprocessor is "-".
.Sh NATIONAL CHARACTER SETS
There are three types of characters in the input file:
.Bl -tag -width "control characters"
.It normal characters
Can be displayed directly to the screen.
.It control characters
Should not be displayed directly, but are expected to be found
in ordinary text files (such as backspace and tab).
.It binary characters
Should not be displayed directly and are not expected to be found
in text files.
.El
.Pp
A "character set" is simply a description of which characters are to
be considered normal, control, and binary.
The
.Ev LESSCHARSET
environment variable may be used to select a character set.
Possible values for
.Ev LESSCHARSET
are:
.Bl -tag -width "IBM-1047"
.It ascii
BS, TAB, NL, CR, and formfeed are control characters,
all chars with values between 32 and 126 are normal,
and all others are binary.
.It iso8859
Selects an ISO 8859 character set.
This is the same as ASCII, except characters between 160 and 255 are
treated as normal characters.
.It latin1
Same as iso8859.
.It latin9
Same as iso8859.
.It dos
Selects a character set appropriate for MS-DOS.
.It ebcdic
Selects an EBCDIC character set.
.It IBM-1047
Selects an EBCDIC character set used by OS/390 Unix Services.
This is the EBCDIC analogue of latin1.
You get similar results by setting either LESSCHARSET=IBM-1047 or
LC_CTYPE=en_US in your environment.
.It koi8-r
Selects a Russian character set.
.It next
Selects a character set appropriate for NeXT computers.
.It utf-8
Selects the UTF-8 encoding of the ISO 10646 character set.
.El
.Pp
In special cases, it may be desired to tailor
.Nm
to use a character set other than the ones definable by LESSCHARSET.
In this case, the environment variable
.Ev LESSCHARDEF
can be used to define a character set.
It should be set to a string where each character in the string represents
one character in the character set.
The character "." is used for a normal character, "c" for control,
and "b" for binary.
A decimal number may be used for repetition.
For example, "bccc4b." would mean character 0 is binary,
1, 2 and 3 are control, 4, 5, 6 and 7 are binary, and 8 is normal.
All characters after the last are taken to be the same as the last,
so characters 9 through 255 would be normal.
(This is an example, and does not necessarily
represent any real character set.)
.Pp
This table shows the value of LESSCHARDEF which is equivalent
to each of the possible values for LESSCHARSET:
.Bd -literal -offset indent
ascii		8bcccbcc18b95.b
dos		8bcccbcc12bc5b95.b.
ebcdic		5bc6bcc7bcc41b.9b7.9b5.b..8b6.10b6.b9.7b
		9.8b8.17b3.3b9.7b9.8b8.6b10.b.b.b.
IBM-1047	4cbcbc3b9cbccbccbb4c6bcc5b3cbbc4bc4bccbc
		191.b
iso8859		8bcccbcc18b95.33b.
koi8-r		8bcccbcc18b95.b128.
latin1		8bcccbcc18b95.33b.
next		8bcccbcc18b95.bb125.bb
.Ed
.Pp
If neither LESSCHARSET nor LESSCHARDEF is set,
but the string "UTF-8" is found in the
.Ev LC_ALL , LC_TYPE
or
.Ev LANG
environment variables, then the default character set is utf-8.
.Pp
If that string is not found, but your system supports the
setlocale interface,
.Nm
will use setlocale to determine the character set.
setlocale is controlled by setting the
.Ev LANG
or
.Ev LC_CTYPE
environment variables.
.Pp
Finally, if the
setlocale interface is also not available, the default character set is latin1.
.Pp
Control and binary characters are displayed in standout (reverse video).
Each such character is displayed in caret notation if possible
(e.g. ^A for control-A).
Caret notation is used only if inverting the 0100 bit results in a
normal printable character.
Otherwise, the character is displayed as a hex number in angle brackets.
This format can be changed by setting the
.Ev LESSBINFMT
environment variable.
LESSBINFMT may begin with a "*" and one character to select
the display attribute:
"*k" is blinking, "*d" is bold, "*u" is underlined, "*s" is standout,
and "*n" is normal.
If LESSBINFMT does not begin with a "*", normal attribute is assumed.
The remainder of LESSBINFMT is a string which may include one
printf-style escape sequence (a % followed by x, X, o, d, etc.).
For example, if LESSBINFMT is "*u[%x]", binary characters
are displayed in underlined hexadecimal surrounded by brackets.
The default if no LESSBINFMT is specified is "*s<%X>".
.Sh PROMPTS
The -P option allows you to tailor the prompt to your preference.
The string given to the -P option replaces the specified prompt string.
Certain characters in the string are interpreted specially.
The prompt mechanism is rather complicated to provide flexibility,
but the ordinary user need not understand the details of constructing
personalized prompt strings.
.Pp
A percent sign followed by a single character is expanded
according to what the following character is:
.Bl -tag -width Ds
.It %b Ns Ar X
Replaced by the byte offset into the current input file.
The b is followed by a single character (shown as
.Ar X
above) which specifies the line whose byte offset is to be used.
If the character is a "t", the byte offset of the top line in the
display is used,
an "m" means use the middle line,
a "b" means use the bottom line,
a "B" means use the line just after the bottom line,
and a "j" means use the "target" line, as specified by the -j option.
.It \&%B
Replaced by the size of the current input file.
.It %c
Replaced by the column number of the text appearing in the first
column of the screen.
.It %d Ns Ar X
Replaced by the page number of a line in the input file.
The line to be used is determined by the
.Ar X ,
as with the %b option.
.It \&%D
Replaced by the number of pages in the input file,
or equivalently, the page number of the last line in the input file.
.It %E
Replaced by the name of the editor (from the
.Ev VISUAL
environment variable, or the
.Ev EDITOR
environment variable if
.Ev VISUAL
is not defined).
See the discussion of the LESSEDIT feature below.
.It %f
Replaced by the name of the current input file.
.It %i
Replaced by the index of the current file in the list of
input files.
.It %l Ns Ar X
Replaced by the line number of a line in the input file.
The line to be used is determined by the
.Ar X ,
as with the %b option.
.It %L
Replaced by the line number of the last line in the input file.
.It %m
Replaced by the total number of input files.
.It %p Ns Ar X
Replaced by the percent into the current input file, based on byte offsets.
The line used is determined by the
.Ar X ,
as with the %b option.
.It \&%P Ns Ar X
Replaced by the percent into the current input file, based on line numbers.
The line used is determined by the
.Ar X ,
as with the %b option.
.It %s
Same as %B.
.It %t
Causes any trailing spaces to be removed.
Usually used at the end of the string, but may appear anywhere.
.It %x
Replaced by the name of the next input file in the list.
.El
.Pp
If any item is unknown (for example, the file size if input is a pipe),
a question mark is printed instead.
.Pp
The format of the prompt string can be changed depending on certain conditions.
A question mark followed by a single character acts like an "IF":
depending on the following character, a condition is evaluated.
If the condition is true, any characters following the question mark
and condition character, up to a period, are included in the prompt.
If the condition is false, such characters are not included.
A colon appearing between the question mark and the
period can be used to establish an "ELSE": any characters between
the colon and the period are included in the string, if and only if
the IF condition is false.
Condition characters (which follow a question mark) may be:
.Bl -tag -width Ds
.It ?a
True if any characters have been included in the prompt so far.
.It ?b Ns Ar X
True if the byte offset of the specified line is known.
.It ?B
True if the size of the current input file is known.
.It ?c
True if the text is horizontally shifted (%c is not zero).
.It ?d Ns Ar X
True if the page number of the specified line is known.
.It ?e
True if at end-of-file.
.It ?f
True if there is an input filename
(that is, if input is not a pipe).
.It ?l Ns Ar X
True if the line number of the specified line is known.
.It ?L
True if the line number of the last line in the file is known.
.It ?m
True if there is more than one input file.
.It ?n
True if this is the first prompt in a new input file.
.It ?p Ns Ar X
True if the percent into the current input file, based on byte offsets,
of the specified line is known.
.It ?P Ns Ar X
True if the percent into the current input file, based on line numbers,
of the specified line is known.
.It ?s
Same as "?B".
.It ?x
True if there is a next input file
(that is, if the current input file is not the last one).
.El
.Pp
Any characters other than the special ones
(question mark, colon, period, percent, and backslash)
become literally part of the prompt.
Any of the special characters may be included in the prompt literally
by preceding it with a backslash.
.Pp
Some examples:
.Pp
.Dl ?f%f:Standard input.
.Pp
This prompt prints the filename, if known;
otherwise the string "Standard input".
.Pp
.Dl ?f%f .?ltLine %lt:?pt%pt\e%:?btByte %bt:-...
.Pp
This prompt would print the filename, if known.
The filename is followed by the line number, if known,
otherwise the percent if known, otherwise the byte offset if known.
Otherwise, a dash is printed.
Notice how each question mark has a matching period,
and how the % after the %pt
is included literally by escaping it with a backslash.
.Pp
.Dl ?n?f%f\ .?m(file\ %i\ of\ %m)\ ..?e(END)\ ?x-\ Next\e:\ %x..%t
.Pp
This prints the filename if this is the first prompt in a file,
followed by the "file N of N" message if there is more
than one input file.
Then, if we are at end-of-file, the string "(END)" is printed
followed by the name of the next file, if there is one.
Finally, any trailing spaces are truncated.
This is the default prompt.
For reference, here are the defaults for
the other two prompts (-m and -M respectively).
Each is broken into two lines here for readability only.
.Bd -literal -offset indent
?n?f%f\ .?m(file\ %i\ of\ %m)\ ..?e(END)\ ?x-\ Next\e:\ %x.:
	?pB%pB\e%:byte\ %bB?s/%s...%t

?f%f\ .?n?m(file\ %i\ of\ %m)\ ..?ltlines\ %lt-%lb?L/%L.\ :
	byte\ %bB?s/%s.\ .?e(END)\ ?x-\ Next\e:\ %x.:?pB%pB\e%..%t
.Ed
.Pp
And here is the default message produced by the = command:
.Bd -literal -offset indent
?f%f\ .?m(file\ %i\ of\ %m)\ .?ltlines\ %lt-%lb?L/%L.\ .
	byte\ %bB?s/%s.\ ?e(END)\ :?pB%pB\e%..%t
.Ed
.Pp
The prompt expansion features are also used for another purpose:
if an environment variable
.Ev LESSEDIT
is defined, it is used as the command to be executed when the v command
is invoked.
The LESSEDIT string is expanded in the same way as the prompt strings.
The default value for LESSEDIT is:
.Pp
.Dl %E\ ?lm+%lm.\ %f
.Pp
Note that this expands to the editor name, followed by a + and the
line number, followed by the file name.
If your editor does not accept the "+linenumber" syntax, or has other
differences in invocation syntax, the
.Ev LESSEDIT
variable can be changed to modify this default.
.Sh SECURITY
When the environment variable
.Ev LESSSECURE
is set to 1,
.Nm
runs in a "secure" mode.
This means these features are disabled:
.Bl -tag -width Ds
.It \&!
The shell command.
.It |
The pipe command.
.It :e
The examine command.
.It v
The editing command.
.It s -o
Log files.
.It -k
Use of lesskey files.
.It -t
Use of tags files.
.It " "
Metacharacters in filenames, such as "*".
.It " "
Filename completion (TAB, ^L).
.El
.Pp
Less can also be compiled to be permanently in "secure" mode.
.Sh ENVIRONMENT
Environment variables may be specified either in the system environment
as usual, or in a
.Xr lesskey 1
file.
If environment variables are defined in more than one place,
variables defined in a local lesskey file take precedence over
variables defined in the system environment, which take precedence
over variables defined in the system-wide lesskey file.
.Bl -tag -width Ds
.It Ev COLUMNS
Sets the number of columns on the screen.
Takes precedence over the number of columns specified by the TERM variable.
(But if you have a windowing system which supports TIOCGWINSZ or WIOCGETD,
the window system's idea of the screen size takes precedence over the
LINES and COLUMNS environment variables.)
.It Ev EDITOR
The name of the editor (used for the v command).
.It Ev HOME
Name of the user's home directory
(used to find a lesskey file).
.\" .It Ev "HOMEDRIVE, HOMEPATH"
.\" Concatenation of the HOMEDRIVE and HOMEPATH environment variables is
.\" the name of the user's home directory if the HOME variable is not set
.\" (only in the Windows version).
.\" .It Ev INIT
.\" Name of the user's init directory
.\" (used to find a lesskey file on OS/2 systems).
.It Ev LANG
Language for determining the character set.
.It Ev LC_CTYPE
Language for determining the character set.
.It Ev LESS
Options which are passed to
.Nm
automatically.
.It Ev LESSANSIENDCHARS
Characters which are assumed to end an ANSI color escape sequence
(default "m").
.It Ev LESSBINFMT
Format for displaying non-printable, non-control characters.
.It Ev LESSCHARDEF
Defines a character set.
.It Ev LESSCHARSET
Selects a predefined character set.
.It Ev LESSCLOSE
Command line to invoke the (optional) input-postprocessor.
.\" .It Ev LESSECHO
.\" Name of the lessecho program (default "lessecho").
.\" The lessecho program is needed to expand metacharacters, such as * and ?,
.\" in filenames on Unix systems.
.It Ev LESSEDIT
Editor prototype string (used for the v command).
See discussion under
.Sx PROMPTS .
.It Ev LESSGLOBALTAGS
Name of the command used by the -t option to find global tags.
Normally should be set to "global" if your system has the global command.
If not set, global tags are not used.
.It Ev LESSKEY
Name of the default lesskey(1) file.
.It Ev LESSKEY_SYSTEM
Name of the default system-wide lesskey(1) file.
.It Ev LESSMETACHARS
List of characters which are considered "metacharacters" by the shell.
.It Ev LESSMETAESCAPE
Prefix which
.Nm
will add before each metacharacter in a command sent to the shell.
If LESSMETAESCAPE is an empty string, commands containing
metacharacters will not be passed to the shell.
.It Ev LESSOPEN
Command line to invoke the (optional) input-preprocessor.
.It Ev LESSSECURE
Runs less in "secure" mode.
See discussion under
.Sx SECURITY .
.It Ev LESSSEPARATOR
String to be appended to a directory name in filename completion.
.It Ev LINES
Sets the number of lines on the screen.
Takes precedence over the number of lines specified by the TERM variable.
(But if you have a windowing system which supports TIOCGWINSZ or WIOCGETD,
the window system's idea of the screen size takes precedence over the
LINES and COLUMNS environment variables.)
.\" .It Ev PATH
.\" User's search path (used to find a lesskey file
.\" on MS-DOS and OS/2 systems).
.It Ev SHELL
The shell used to execute the ! command, as well as to expand filenames.
.It Ev TERM
The type of terminal on which
.Nm
is being run.
.It Ev VISUAL
The name of the editor (used for the v command).
.El
.Sh SEE ALSO
.Xr lesskey 1
.Sh STANDARDS
The
.Nm more
utility is compliant with the
.St -p1003.1-2004
specification.
.Pp
The flags
.Op Fl aBbCdEFfGghIJjkLMmNOoPQqRrSTUVWwXxyz~#
are extensions to that specification.
.Sh AUTHORS
.An Mark Nudelman Aq markn@greenwoodsoftware.com
.Pp
Send bug reports or comments to the above address or to
.Aq bug\-less@gnu.org .
.Pp
For more information, see the less homepage at
.Pa http://www.greenwoodsoftware.com/less .
.Sh CAVEATS
The = command and prompts (unless changed by -P)
report the line numbers of the lines at the top and bottom of the screen,
but the byte and percent of the line after the one at the bottom of the screen.
.Pp
If the :e command is used to name more than one file,
and one of the named files has been viewed previously,
the new files may be entered into the list in an unexpected order.
.Pp
On certain older terminals (the so-called "magic cookie" terminals),
search highlighting will cause an erroneous display.
On such terminals, search highlighting is disabled by default
to avoid possible problems.
.Pp
In certain cases, when search highlighting is enabled and
a search pattern begins with a ^,
more text than the matching string may be highlighted.
(This problem does not occur when
.Nm
is compiled to use the POSIX regular expression package.)
.Pp
When viewing text containing ANSI color escape sequences using the -R option,
searching will not find text containing an embedded escape sequence.
Also, search highlighting may change the color of some of the text
which follows the highlighted text.
.Pp
On some systems, setlocale claims that ASCII characters 0 through 31 are
control characters rather than binary characters.
This causes
.Nm
to treat some binary files as ordinary, non-binary files.
To workaround this problem, set the environment variable
.Ev LESSCHARSET
to "ascii" (or whatever character set is appropriate).
.Pp
See
.Pa http://www.greenwoodsoftware.com/less
for the latest list of known bugs in this version of
.Nm less .
