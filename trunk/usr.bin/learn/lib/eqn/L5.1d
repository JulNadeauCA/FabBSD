#once #create message
.ND
.EQ
delim $$
.EN
.LP
You will get lots of practice
using braces as we go along.
One thing to keep in mind is that
braces can appear ______within braces.
(Remember that I said that anywhere you
could use an "x" you could put something in
braces instead.  So to get this:
.EQ
e sup {x sup {pi +1} + y sup {pi +1}}
.EN
you can type

  e sup {x sup {pi +1} + y sup {pi +1}}

The big superscript (the one on the "e") has
a pair of braces that take in everything.
Then the "x" and the "y" each have braces
to delimit their superscripts.
Of course the braces have to go in the right
places, or you won't get the output you
want.

To verify that you are still following this
lesson, modify "Example" so it looks like
this, then type "ready".
.pl 1
#once #create Ref
.LP
.EQ
e sup { - {x sup {pi +1} + y sup {pi +1}} over 2}
.EN
.pl 1
#once #create Example
.LP
.EQ
e sup {x sup {pi +1} + y sup {pi +1}}
.EN
.pl 1
#
#once neqn Ref | nroff >X1 &
#once neqn message Ref | nroff -T$term %s/tinyms -
#user
neqn Example | nroff >X2
#cmp X1 X2
#fail
Don't forget that you need braces for the overall superscript,
and also for the "over" part.
#log
#next
5.1e 10
5.2d 5
