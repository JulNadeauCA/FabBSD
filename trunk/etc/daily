#!/bin/sh -
#
#	$FabBSD$
#	$OpenBSD: daily,v 1.56 2006/10/26 12:20:55 ajacoutot Exp $
#	From: @(#)daily	8.2 (Berkeley) 1/25/94
#
umask 022

PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin
bak=/var/backups

sysctl -n kern.version
uptime

if [ -f /etc/daily.local ]; then
	echo ""
	echo "Running daily.local:"
	. /etc/daily.local
fi

TMP=`mktemp /tmp/_daily.XXXXXXXXXX` || exit 1

trap 'rm -f $TMP; exit 1' 0 1 15

echo ""
echo "Removing scratch and junk files:"
if [ -d /tmp -a ! -L /tmp ]; then
	cd /tmp && {
	find -x . \
	    \( -path './ssh-*' \) \
	    -prune -o -type f -atime +3 -execdir rm -f -- {} \;
	find -x . -type d -mtime +1 ! -path ./vi.recover \
	    ! -name . -execdir rmdir -- {} \; >/dev/null 2>&1; }
fi

if [ -d /var/tmp -a ! -L /var/tmp ]; then
	cd /var/tmp && {
	find -x . \
	    \( -path './ssh-*' \) \
	    -prune -o ! -type d -atime +7 -execdir rm -f -- {} \;
	find -x . -type d -mtime +1 ! -path ./vi.recover \
	    ! -name . -execdir rmdir -- {} \; >/dev/null 2>&1; }
fi

# Additional junk directory cleanup would go like this:
#if [ -d /scratch -a ! -L /scratch ]; then
#	cd /scratch && {
#	find . ! -name . -atime +1 -execdir rm -f -- {} \;
#	find . ! -name . -type d -mtime +1 -execdir rmdir -- {} \; \
#	    >/dev/null 2>&1; }
#fi

#find / \( ! -fstype local -o -fstype rdonly \
#		-o -fstype procfs \) -a -prune -o \
#	-name 'lost+found' -a -prune -o \
#	-name '*.core' -a -print -o \
#	\( -name '[#,]*' -o -name '.#*' -o -name a.out \
#	   -o -name '*.CKP' -o -name '.emacs_[0-9]*' \) \
#		-a -atime +3 -a -execdir rm -f -- {} \; -a -print > $TMP

if egrep -q '\.core$' $TMP; then
	echo ""
	echo "Possible core dumps:"
	egrep '\.core$' $TMP
fi

if egrep -qv '\.core$' $TMP; then
	echo ""
	echo "Deleted files:"
	egrep -v '\.core$' $TMP
fi

if [ -d /var/msgs -a ! -L /var/msgs ]; then
	msgs -c
fi

# If ROOTBACKUP is set to 1 in the environment, and
# if filesystem named /altroot is type ffs, on /dev/* and mounted "xx",
# use it as a backup root filesystem to be updated daily.
[ "X$ROOTBACKUP" = X1 ] && {
	rootdev=`df -n / | awk '/^\/dev\// { print substr($1, 6) }'`
	rootbak=`awk '$2 == "/altroot" && $1 ~ /^\/dev\// && $3 == "ffs" && \
	    $4 ~ /xx/ \
		{ print substr($1, 6) }' < /etc/fstab`
	[ X$rootdev != X -a X$rootbak != X -a X$rootdev != X$rootbak ] && {
		sync
		echo ""
		echo "Backing up root filesystem:"
		echo "copying /dev/r$rootdev to /dev/r$rootbak"
		dd if=/dev/r$rootdev of=/dev/r$rootbak bs=16b seek=1 skip=1 \
			conv=noerror
		fsck -y /dev/r$rootbak
	}
}

echo ""
echo "Checking subsystem status:"
echo ""
echo "disks:"
df -kl
echo ""

echo ""
echo "network:"
netstat -ivn
echo ""

# If CHECKFILESYSTEMS is set to 1 in the environment, run fsck
# with the no-write flag.
[ "X$CHECKFILESYSTEMS" = X1 ] && {
	echo ""
	echo "Checking filesystems:"
	fsck -n | grep -v '^\*\* Phase'
}

sh /etc/security 2>&1 > /var/log/security
chmod 600 /var/log/security
