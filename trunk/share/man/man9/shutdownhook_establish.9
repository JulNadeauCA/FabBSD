.\"	$OpenBSD: shutdownhook_establish.9,v 1.15 2007/05/31 19:20:01 jmc Exp $
.\"	$NetBSD: shutdownhook_establish.9,v 1.1 1995/11/25 21:24:52 perry Exp $
.\"
.\" Copyright (c) 1994 Christopher G. Demetriou
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by Christopher G. Demetriou
.\"      for the NetBSD Project.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: May 31 2007 $
.Dt SHUTDOWNHOOK_ESTABLISH 9
.Os
.Sh NAME
.Nm shutdownhook_establish ,
.Nm shutdownhook_disestablish
.Nd add or remove a shutdown hook
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/systm.h>
.Ft void *
.Fn shutdownhook_establish "void (*fn)(void *)" "void *arg"
.Ft void
.Fn shutdownhook_disestablish "void *cookie"
.Sh DESCRIPTION
The
.Fn shutdownhook_establish
function adds
.Fa fn
to the list of hooks invoked by
.Xr doshutdownhooks 9
at shutdown.
When invoked, the hook function
.Fa fn
will be passed
.Fa arg
as its only argument.
.Pp
The
.Fn shutdownhook_disestablish
function removes the hook described by the opaque pointer
.Fa cookie
from the list of hooks to be invoked at shutdown.
If
.Fa cookie
is invalid, the result of
.Fn shutdownhook_disestablish
is undefined.
.Pp
Shutdown hooks should be used to perform one-time activities
that must happen immediately before the kernel exits.
Because of the environment in which they are run, shutdown hooks cannot
rely on many system services (including file systems, timeouts,
and other interrupt-driven services) or even basic system
integrity (because the system could be rebooting after a crash).
.Pp
Shutdown hooks are, like startup hooks, implemented via the more general
.Xr dohooks 9
API.
.Sh RETURN VALUES
If successful,
.Fn shutdownhook_establish
returns an opaque pointer describing the newly established
shutdown hook.
Otherwise, it returns
.Dv NULL .
.Sh EXAMPLES
It may be appropriate to use a shutdown hook to
disable a device that does direct memory access, so that
the device will not try to access memory while the system
is rebooting.
.Pp
It may be appropriate to use a shutdown hook to
inform watchdog timer hardware that the operating system
is no longer running.
.Sh SEE ALSO
.Xr dohooks 9 ,
.Xr doshutdownhooks 9 ,
.Xr dostartuphooks 9
.Sh CAVEATS
Shutdown hooks should only be used to do what's strictly necessary
to do to ensure a correct reboot.
Since shutdown hooks are run even after a panic, a panic caused by a
shutdown hook will automatically cause the shutdown hook to be run again
causing an endless loop.
An example of things that need to be done in a shutdown hook could be
stopping DMA engines that might corrupt memory when rebooting.
An example of things that shouldn't be done in a shutdown hook is syncing
the file systems.
Once again, since the system could be rebooting because of an internal
inconsistency, writing down anything to permanent storage or trusting
the internal state of the system is a very bad idea.
.Sh BUGS
The names are clumsy, at best.
